.square-definitions(@lg-container) {
  .square-size (@num-square, @lg-container);
}

.square-size(@size, @lg-container) when (@size > 1) {
  .square.x@{size} {
    .square-style(@size, @lg-container);
  }

  .square-size(@size - 1, @lg-container);
}

.square-size(@size, @lg-container) when (@size = 1) {
  .square {
    .square-style(@size, @lg-container);
  }
}

.square-style(@size, @lg-container) {
  @computedWidth: (100% / @num-square) * @size;
  @computedMargin: (@margin-square * @size)px;
  transition: all 0.2s;
  display: inline-block;
  float: left;
  overflow: hidden;
  outline: none;
  box-sizing: border-box;
  width: ~"calc(" @computedWidth ~ " - " @margin-square - ((@size*@margin-square/@num-square)) ~")";
  margin: 0 @margin-square @margin-square 0;
  border: @border-square-style;
  padding: @padding-square;

  & when (@lg-container = true) {
    @media (min-width: 1367px) {
      width: ((100% / @num-square-lg) * @size);
    }
  }

  @media (max-width: 768px) {
    width: ((100%));
  }
}